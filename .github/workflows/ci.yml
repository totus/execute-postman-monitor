name: CI

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  test:
    name: E2E test against mock Postman API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
      - name: Install test deps
        run: |
          mkdir -p test
          npm init -y >/dev/null 2>&1 || true
      - name: Start mock Postman API
        run: |
          node test/mock-postman.js &
          echo $! > .mock-postman.pid
          sleep 0.5
      - name: Execute action (success path)
        id: run_action
        uses: ./
        with:
          postman-api-key: dummy
          monitor-id: test-monitor
          postman-host: http://127.0.0.1:4010
      - name: Assert status output
        run: |
          test "${{ steps.run_action.outputs.status }}" = "success" || {
            echo "Expected status=success, got: ${{ steps.run_action.outputs.status }}";
            exit 1;
          }
      - name: Stop mock server
        if: always()
        run: |
          if [ -f .mock-postman.pid ]; then kill $(cat .mock-postman.pid) || true; fi
      - name: Tag new release (patch) on main
        if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git fetch --tags
          LATEST=$(git tag -l 'v*.*.*' --sort=-v:refname | head -n1)
          if [ -z "$LATEST" ]; then
            NEW_TAG="v1.0.0"
          else
            VERS=${LATEST#v}
            IFS='.' read -r MAJOR MINOR PATCH <<EOF
          ${VERS}
          EOF
            PATCH=$((PATCH + 1))
            NEW_TAG="v${MAJOR}.${MINOR}.${PATCH}"
          fi
          echo "Tagging $NEW_TAG"
          git tag -a "$NEW_TAG" -m "CI: release $NEW_TAG"
          git push origin "refs/tags/$NEW_TAG"
